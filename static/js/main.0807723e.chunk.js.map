{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","helper.js","componentes/Presupuesto.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","nombreGasto","React","createRef","cantidadGasto","crearGasto","e","preventDefault","gasto","_this","current","value","agregarGasto","currentTarget","reset","onSubmit","this","className","ref","type","placeholder","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","Gasto_Gasto","revisarPresupuesto","presupuesto","restante","Presupuesto","Restante","ControlPresupuesto","react","Presupuesto_Presupuesto","Restante_Restante","App","state","objectSpread","concat","Date","now","restarPresupuesto","setState","cantidad","restar","Number","obtenerPresupuesto","resultado","totalPresupuesto","parseInt","validarPresupuesto","prompt","componentes_Header","Formulario_Formulario","Listado_Listado","ControlPresupuesto_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0807723e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <h1>{props.titulo} </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Formulario extends Component {\r\n\r\n    //refs para los campos del formulario\r\n    nombreGasto = React.createRef();\r\n    cantidadGasto = React.createRef();\r\n\r\n    crearGasto = (e) => {\r\n        //prevenir default\r\n        e.preventDefault();\r\n        //crear objeto\r\n        const gasto = {\r\n            nombreGasto: this.nombreGasto.current.value,\r\n            cantidadGasto: this.cantidadGasto.current.value,\r\n        }\r\n        //agregarlo y enviar por props \r\n        this.props.agregarGasto(gasto);\r\n        //resetear el form (principal)\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.crearGasto}>\r\n                <h2>Agrega tus gastos aqui</h2>\r\n                <div className=\"campo\">\r\n                    <label>Nombre Gasto</label>\r\n                    <input ref={this.nombreGasto} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" />\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Cantidad</label>\r\n                    <input ref={this.cantidadGasto} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. 300\" />\r\n                </div>\r\n\r\n                <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nFormulario.propTypes = {\r\n    agregarGasto: PropTypes.func.isRequired\r\n}","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Gasto extends Component {\r\n\r\n    render() {\r\n        const {cantidadGasto, nombreGasto} = this.props.gasto\r\n\r\n        return (\r\n            <li className=\"gastos\">\r\n                <p>\r\n                    {nombreGasto}\r\n                    <span className=\"gasto\">$ {cantidadGasto} </span>\r\n                </p>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}","import React,{Component} from 'react';\r\nimport Gasto from './Gasto'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Listado extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"gastos-realizados\">\r\n                <h2>Listado</h2>\r\n                {Object.keys( this.props.gastos ).map( key => (\r\n                    <Gasto\r\n                        key = {key}\r\n                        gasto = {this.props.gastos[key]}\r\n                    />\r\n                ))}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.object.isRequired\r\n}","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\r\n\r\n    if(totalPresupuesto > 0 ) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto,restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if( (presupuesto / 4) > restante) {\r\n         clase = 'alert alert-danger';\r\n    } else if( (presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n} ","import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Presupuesto extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {this.props.presupuesto}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired\r\n}","import React,{Component} from 'react';\r\nimport {revisarPresupuesto} from '../helper'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Restante extends Component {\r\n\r\n    render() {\r\n        const presupuesto = this.props.presupuesto;\r\n        const restante = this.props.restante;\r\n\r\n        return (\r\n            <div className={revisarPresupuesto(presupuesto,restante)}>\r\n                Restante: $ {this.props.restante}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRestante.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}","import React,{Component, Fragment} from 'react';\r\nimport Presupuesto from './Presupuesto';\r\nimport Restante from  './Restante';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ControlPresupuesto extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Presupuesto\r\n                    presupuesto = {this.props.presupuesto}\r\n                />\r\n                <Restante\r\n                    presupuesto = {this.props.presupuesto}\r\n                    restante = {this.props.restante}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header'\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport {validarPresupuesto} from '../helper';\nimport ControlPresupuesto from './ControlPresupuesto';\n\nclass App extends Component {\n\n  state = {\n    gastos: {},\n    presupuesto: 0,\n    restante:0,\n  }\n\n  componentDidMount() {\n    this.obtenerPresupuesto();\n  }\n\n  obtenerPresupuesto() {\n    let presupuesto = prompt('Ingrese presupuesto');\n\n    let resultado = validarPresupuesto(presupuesto);\n    if (resultado) {\n      this.setState({\n        // aca el tuto le pasa presupuesto ne vez de resultado, pero esta mal porque es un string y no esta validado como numero\n        presupuesto: resultado,\n        restante: resultado,\n      })\n    } else {\n      this.obtenerPresupuesto();\n    }\n  }\n\n  //agregar un nuevo gasto al state\n  agregarGasto = gasto => {\n    //tomar copia del state actual (trae todos los gastos que guarde anteriormente, para no perderlos)\n    const gastos = {...this.state.gastos}\n    //agregar objeto gasto al objeto del state (agrega un gasto a los gastos que estaban guardados en el state)\n    gastos[`gasto${Date.now()}`] = gasto;\n\n    this.restarPresupuesto(gasto.cantidadGasto);\n\n    //ponerlo en el state\n    this.setState({\n      gastos,\n    })\n    \n  }\n\n  restarPresupuesto = cantidad => {\n    let restar = Number(cantidad);\n    let restante = this.state.restante;\n    restante -= restar;\n\n    this.setState({\n      restante,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n\n        <Header \n          titulo = 'Gasto Semanal'\n        />\n\n        <div className=\"contenido-principal contenido\">\n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <Formulario\n\n                agregarGasto = {this.agregarGasto}\n\n              />\n            </div>\n            <div className=\"one-half column\">\n              <Listado\n\n                gastos = {this.state.gastos}\n\n              />\n\n              <ControlPresupuesto\n              \n                presupuesto = {this.state.presupuesto}\n                restante = {this.state.restante}\n\n              />\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}